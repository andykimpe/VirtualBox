--- VirtualBox-6.1.36/configure	2022-07-19 21:48:52.000000000 +0100
+++ VirtualBox-6.1.34.orig/configure	2022-07-25 14:00:03.679779468 +0100
@@ -2027,7 +2027,7 @@ extern "C" int main(void)
 }
 EOF
   found=
-  SUPPYTHONLIBS="python2.7 python2.6 python3.1 python3.2 python3.3 python3.4 python3.4m python3.5 python3.5m python3.6 python3.6m python3.7 python3.7m python3.8 python3.8m python3.9 python3.9m python3.10 python3.10m"
+  SUPPYTHONLIBS="python2.7 python2.6 python3.1 python3.2 python3.3 python3.4 python3.4m python3.5 python3.5m python3.6 python3.6m python3.7 python3.7m python3.8 python3.8m python3.9 python3.9m python3.10 python3.10m python3.11 python3.11m"
   for p in $PYTHONDIR; do
     for d in $SUPPYTHONLIBS; do
       for b in lib/x86_64-linux-gnu lib/i386-linux-gnu lib64 lib/64 lib; do
diff -rup VirtualBox-6.1.36/src/libs/xpcom18a4/python/Makefile.kmk VirtualBox-6.1.34.orig/src/libs/xpcom18a4/python/Makefile.kmk
--- VirtualBox-6.1.36/src/libs/xpcom18a4/python/Makefile.kmk	2022-07-19 22:01:39.000000000 +0100
+++ VirtualBox-6.1.34.orig/src/libs/xpcom18a4/python/Makefile.kmk	2022-07-25 14:00:03.971778289 +0100
@@ -26,7 +26,7 @@ endif
 
 #
 # List of supported Python versions, defining a number of
-# VBOX_PYTHON[26|27|31|32|32M|33|33M|34|34M|35|35M|36|36M|37|37M|38|38M|39|39M|310|310M|DEF]_[INC|LIB] variables
+# VBOX_PYTHON[26|27|31|32|32M|33|33M|34|34M|35|35M|36|36M|37|37M|38|38M|39|39M|310|310M|311|311M|DEF]_[INC|LIB] variables
 # which get picked up below.
 #
 ifeq ($(KBUILD_TARGET),darwin) # Relatively predictable, don't script.
@@ -624,6 +624,52 @@ VBoxPython3_10m_x86_LIBS       = $(VBOX_
   endif
  endif
 endif
+
+ifdef VBOX_PYTHON311_INC
+#
+# Python 3.11 version
+#
+DLLS += VBoxPython3_11
+VBoxPython3_11_EXTENDS    = VBoxPythonBase
+VBoxPython3_11_EXTENDS_BY = appending
+VBoxPython3_11_TEMPLATE   = XPCOM
+VBoxPython3_11_INCS       = $(VBOX_PYTHON311_INC)
+VBoxPython3_11_LIBS       = $(VBOX_PYTHON311_LIB)
+
+ ifdef VBOX_WITH_32_ON_64_MAIN_API
+  ifdef VBOX_PYTHON311_LIB_X86
+DLLS += VBoxPython3_11_x86
+VBoxPython3_11_x86_EXTENDS    = VBoxPythonBase_x86
+VBoxPython3_11_x86_EXTENDS_BY = appending
+VBoxPython3_11_x86_TEMPLATE   = XPCOM
+VBoxPython3_11_x86_INCS       = $(VBOX_PYTHON311_INC)
+VBoxPython3_11_x86_LIBS       = $(VBOX_PYTHON311_LIB_X86)
+  endif
+ endif
+endif
+
+ifdef VBOX_PYTHON311M_INC
+#
+# Python 3.11 version with pymalloc
+#
+DLLS += VBoxPython3_11m
+VBoxPython3_11m_EXTENDS    = VBoxPythonBase_m
+VBoxPython3_11m_EXTENDS_BY = appending
+VBoxPython3_11m_TEMPLATE   = XPCOM
+VBoxPython3_11m_INCS       = $(VBOX_PYTHON311M_INC)
+VBoxPython3_11m_LIBS       = $(VBOX_PYTHON311M_LIB)
+
+ ifdef VBOX_WITH_32_ON_64_MAIN_API
+  ifdef VBOX_PYTHON311M_LIB_X86
+DLLS += VBoxPython3_11m_x86
+VBoxPython3_11m_x86_EXTENDS    = VBoxPythonBase_x86_m
+VBoxPython3_11m_x86_EXTENDS_BY = appending
+VBoxPython3_11m_x86_TEMPLATE_  = XPCOM
+VBoxPython3_11m_x86_INCS       = $(VBOX_PYTHON311M_INC)
+VBoxPython3_11m_x86_LIBS       = $(VBOX_PYTHON311M_LIB_X86)
+  endif
+ endif
+endif
 
 ifdef VBOX_PYTHONDEF_INC
 #
@@ -744,7 +790,7 @@ endif
 # TODO: ASSUMING that we don't need a different headers for pymalloc
 #       ('m' builds < 3.8) and CRT malloc.
 #
-VBOX_PYTHON_LIMITED_API_VER := $(firstword $(foreach ver, 35 36 38 39 310   34 33 \
+VBOX_PYTHON_LIMITED_API_VER := $(firstword $(foreach ver, 35 36 38 39 310 311  34 33 \
 ,$(if-expr defined(VBOX_PYTHON$(ver)_INC),$(ver),)$(if-expr defined(VBOX_PYTHON$(ver)M_INC),$(ver)M,)))
   ifneq ($(VBOX_PYTHON_LIMITED_API_VER),)
 DLLS += VBoxPython3
--- ./src/libs/xpcom18a4/python/src/module/_xpcom.cpp.orig	2022-10-30 04:19:33.834495672 +0000
+++ ./src/libs/xpcom18a4/python/src/module/_xpcom.cpp	2022-10-30 04:24:11.895463023 +0000
@@ -84,7 +84,11 @@ extern PYXPCOM_EXPORT void PyXPCOM_Inter
 #  define MANGLE_MODULE_INIT(a_Name)    RT_CONCAT(a_Name, MODULE_NAME_SUFFIX)
 # endif
 # if defined(VBOX_PYXPCOM_VERSIONED) && !defined(VBOX_PYXPCOM_MAJOR_VERSIONED)
-#  if   PY_VERSION_HEX >= 0x030a0000 && PY_VERSION_HEX < 0x030b0000
+#  if   PY_VERSION_HEX >= 0x030b0000 && PY_VERSION_HEX < 0x030c0000
+#   define MODULE_NAME    MANGLE_MODULE_NAME("VBoxPython3_11")
+#   define initVBoxPython MANGLE_MODULE_INIT(PyInit_VBoxPython3_11)
+
+#  elif   PY_VERSION_HEX >= 0x030a0000 && PY_VERSION_HEX < 0x030b0000
 #   define MODULE_NAME    MANGLE_MODULE_NAME("VBoxPython3_10")
 #   define initVBoxPython MANGLE_MODULE_INIT(PyInit_VBoxPython3_10)
 
