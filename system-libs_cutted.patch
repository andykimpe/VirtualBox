--- ./configure.orig	2022-10-19 19:17:13.000000000 +0100
+++ ./configure	2022-10-31 15:16:29.775851599 +0000
@@ -110,6 +110,8 @@ WITH_DOCS=1
 WITH_LIBVPX=1
 WITH_LIBOPUS=1
 WITH_LIBTPMS=1
+WITH_LIBVORBIS=1
+WITH_LIBOGG=1
 BUILD_LIBXML2=
 BUILD_LIBCURL=
 BUILD_LIBSSL=
@@ -1846,6 +1848,78 @@ EOF
 
 
 #
+# Check for libvorbis
+#
+check_libvorbis()
+{
+  test_header libvorbis
+  if which_wrapper pkg-config > /dev/null; then
+    libvorbis_ver=`pkg-config vorbis --modversion 2>> $LOG`
+    if [ $? -eq 0 ]; then
+      FLGVRB=`pkg-config vorbis --cflags`
+      INCVRB=`strip_I "$FLGVRB"`
+      LIBVRB=`pkg-config vorbis --libs`
+    fi
+    cat > $ODIR.tmp_src.cc << EOF
+#include <cstdio>
+#include <vorbis/vorbisenc.h>
+extern "C" int main(void)
+{
+  vorbis_info v;
+  vorbis_info_init(&v);
+  printf("found, OK.\n");
+}
+EOF
+    [ -n "$INCVRB" ] && I_INCVRB=`prefix_I "$INCVRB"`
+    if test_compile "$LIBVRB $I_INCVRB" vorbis vorbis nofatal; then
+      if test_execute; then
+        cnf_append "SDK_VBOX_VORBIS_INCS" "$INCVRB"
+        cnf_append "SDK_VBOX_VORBIS_LIBS" "`strip_l "$LIBVRB"`"
+      fi
+    else
+      echo "not found -- building libvorbis from in-tree code."
+    fi
+  fi
+}
+
+
+#
+# Check for libogg
+#
+check_libogg()
+{
+  test_header libogg
+  if which_wrapper pkg-config > /dev/null; then
+    libogg_ver=`pkg-config ogg --modversion 2>> $LOG`
+    if [ $? -eq 0 ]; then
+      FLGOGG=`pkg-config ogg --cflags`
+      INCOGG=`strip_I "$FLGOGG"`
+      LIBOGG=`pkg-config ogg --libs`
+    fi
+    cat > $ODIR.tmp_src.cc << EOF
+#include <cstdio>
+#include <ogg/ogg.h>
+extern "C" int main(void)
+{
+  oggpack_buffer o;
+  oggpack_get_buffer(&o);
+  printf("found, OK.\n");
+}
+EOF
+    [ -n "$INCOGG" ] && I_INCVRB=`prefix_I "$INCOGG"`
+    if test_compile "$LIBOGG $I_INCOGG" ogg ogg nofatal; then
+      if test_execute; then
+        cnf_append "SDK_VBOX_OGG_INCS" "$INCOGG"
+        cnf_append "SDK_VBOX_OGG_LIBS" "`strip_l "$LIBOGG"`"
+      fi
+    else
+      echo "not found -- building libogg from in-tree code."
+    fi
+  fi
+}
+
+
+#
 # Check whether static libstdc++ is installed. This library is required
 # for the Linux guest additions.
 #
@@ -2437,6 +2511,8 @@ EOF
 [ $WITH_LIBVPX  -eq 1 ] && echo "  --disable-libvpx         don't use libvpx for video capturing"
 [ $WITH_LIBOPUS -eq 1 ] && echo "  --disable-libopus        don't use libopus for audio capturing"
 [ $WITH_LIBTPMS -eq 1 ] && echo "  --disable-libtpms        don't use libtpms for TPM emulation"
+[ $WITH_LIBVORBIS -eq 1 ] && echo "  --disable-libvorbis        enable system libvorbis"
+[ $WITH_LIBOGG -eq 1 ] && echo "  --disable-libogg        enable system libogg"
 [ "$OS" = "linux" -o "$OS" = "freebsd" ] && echo "  --enable-vde             enable VDE networking"
 cat << EOF
   --disable-udptunnel      disable UDP tunnel networking
@@ -2688,6 +2764,12 @@ for option in "$@"; do
     --disable-libtpms)
       WITH_LIBTPMS=0
       ;;
+    --disable-libvorbis)
+      WITH_LIBVORBIS=0
+      ;;
+    --disable-libogg)
+      WITH_LIBOGG=0
+      ;;
     --disable-sdl)
       WITH_SDL=0
       ;;
@@ -2909,6 +2991,8 @@ if [ $ONLY_ADDITIONS -eq 0 ]; then
   [ $WITH_LIBVPX -eq 1 ] && check_vpx
   [ $WITH_LIBOPUS -eq 1 ] && check_libopus
   [ $WITH_LIBTPMS -eq 1 ] && check_libtpms
+  check_libvorbis
+  check_libogg
   [ "$OS" != "darwin"  ] && check_png
   [ $OSE -eq 0 -a "$OS" = "linux" ] && check_pam
   if [ $WITH_SDL -eq 1 ]; then
