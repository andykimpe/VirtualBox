Build the X.Org driver only for the selected system X Server version.
Author: SÃ©rgio Basto <sergio@serjux.com>
Based on scripts by Michael Meskes <meskes@debian.org>, Felix Geyer <debfx-pkg@fobos.de>

diff --git a/src/VBox/Additions/common/crOpenGL/Makefile.kmk b/src/VBox/Additions/common/crOpenGL/Makefile.kmk
--- a/src/VBox/Additions/common/crOpenGL/Makefile.kmk
+++ b/src/VBox/Additions/common/crOpenGL/Makefile.kmk
@@ -63,16 +63,12 @@ VBoxOGL_TEMPLATE       = VBOXCROGLR3GUESTDLL
 VBoxOGL_INCS           = .
 if1of ($(KBUILD_TARGET), linux solaris freebsd)
  VBoxOGL_INCS     += \
-	$(VBOX_PATH_X11_ROOT)/libXdamage-1.1 \
-	$(VBOX_PATH_X11_ROOT)/libXcomposite-0.4.0 \
-	$(VBOX_PATH_X11_ROOT)/libXfixes-4.0.3 \
-	$(VBOX_PATH_X11_ROOT)/damageproto-1.1.0 \
-	$(VBOX_PATH_X11_ROOT)/compositeproto-0.4 \
-	$(VBOX_PATH_X11_ROOT)/fixesproto-4.0 \
-	$(VBOX_PATH_X11_ROOT)/libx11-1.1.5-other \
-	$(VBOX_PATH_X11_ROOT)/1.3/xorg \
+	/usr/include/x11 \
+	/usr/include/xorg \
+	/usr/include/pixman-1 \
 	$(VBOX_MESA_INCS) \
-	$(PATH_ROOT)/src/VBox/Additions/x11/x11include/libdrm-2.4.13
+	/usr/include/drm \
+	/usr/include/libdrm
  VBoxOGL_DEFS     += VBOX_NO_NATIVEGL
 endif
 
--- a/src/VBox/Additions/x11/vboxvideo/testcase/Makefile.kmk	2012-01-12 19:57:53.762613198 +0000
+++ b/src/VBox/Additions/x11/vboxvideo/testcase/Makefile.kmk	2012-01-12 20:01:17.296596446 +0000
@@ -36,11 +36,11 @@ endif # !VBOX_ONLY_SDK
 #
 tstSetModeXOrg_TEMPLATE = VBOXR3TSTEXE
 tstSetModeXOrg_CFLAGS += -std=c99
-tstSetModeXOrg_DEFS = $(filter-out IN_RT_STATIC,$(vboxvideo_drv_15_DEFS)) TESTCASE
+tstSetModeXOrg_DEFS = $(filter-out IN_RT_STATIC,$(vboxvideo_drv_17_DEFS)) TESTCASE
 tstSetModeXOrg_SOURCES  = \
 	tstSetModeXOrg.c \
 	../setmode.c
-tstSetModeXOrg_INCS = $(vboxvideo_drv_15_INCS)
+tstSetModeXOrg_INCS = $(vboxvideo_drv_17_INCS)
 
 
 # generate rules.
--- ./src/VBox/Additions/x11/vboxmouse/vboxmouse.c.xorg17	2012-03-13 14:52:26.000000000 +0000
+++ ./src/VBox/Additions/x11/vboxmouse/vboxmouse.c	2012-09-09 01:12:19.440114469 +0100
@@ -54,12 +54,12 @@
 
 #ifdef VBOX_GUESTR3XF86MOD
 # define _X_EXPORT
-#else
-# include <errno.h>
-# include <fcntl.h>
-# include <unistd.h>
 #endif
 
+#include <errno.h>
+#include <fcntl.h>
+#include <unistd.h>
+
 #include "product-generated.h"
 
 static void
--- VirtualBox-4.2.0_RC3/src/VBox/Additions/x11/vboxmouse/Makefile.kmk.xorg17	2012-08-03 13:28:42.000000000 +0100
+++ VirtualBox-4.2.0_RC3/src/VBox/Additions/x11/vboxmouse/Makefile.kmk	2012-09-07 03:18:17.460463185 +0100
@@ -30,25 +30,12 @@ if1of ($(KBUILD_TARGET), linux)
  # This one has to be defined when building server code on systems where
  # unsigned long is 64bits
  vboxmouse_drv_DEFS.amd64 += _XSERVER64
- vboxmouse_drv_DEFS += \
-        _POSIX_C_SOURCE=199309L _POSIX_SOURCE _XOPEN_SOURCE \
-	_BSD_SOURCE _SVID_SOURCE _GNU_SOURCE SHAPE XINPUT XKB LBX XAPPGROUP \
-	XCSECURITY TOGCUP XF86BIGFONT DPMSExtension PIXPRIV PANORAMIX RENDER \
-	GCCUSESGAS AVOID_GLYPHBLT PIXPRIV SINGLEDEPTH XFreeXDGA XvExtension \
-	XFree86LOADER XFree86Server XF86VIDMODE XvMCExtension SMART_SCHEDULE \
-	BUILDDEBUG X_BYTE_ORDER=X_LITTLE_ENDIAN DNDEBUG FUNCPROTO=15 NARROWPROTO \
-	IN_MODULE XFree86Module PNP_MOUSE IN_XF86_MODULE
- vboxmouse_drv_INCS := \
-	$(VBOX_PATH_X11_XFREE_4_3)/include \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/extensions \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/X11 \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86 \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/common \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/os-support \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/os-support/bus \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/mi \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/include \
-	$(PATH_SUB_CURRENT)
+vboxmouse_drv_DEFS += XFree86Server IN_MODULE XFree86Module XFree86LOADER XINPUT XORG_7X \
+	IN_XF86_MODULE DONT_DEFINE_WRAPPERS NO_ANSIC
+vboxmouse_drv_INCS := \
+   /usr/include/x11 \
+   /usr/include/xorg \
+   /usr/include/pixman-1
  vboxmouse_drv_SOURCES = \
 	vboxmouse.c
  # Any global symbols in the driver object files will be added to XFree86's
@@ -57,9 +44,18 @@ if1of ($(KBUILD_TARGET), linux)
  vboxmouse_drv_POST_CMDS = \
 	objcopy --keep-global-symbol vboxmouseModuleData $(out) $(out)-objcopy$$(NLTAB) \
 	$(MV) -f $(out)-objcopy $(out)
-endif
-
 
+DLLS += vboxmouse_drv_17
+vboxmouse_drv_17_TEMPLATE = VBOXGUESTR3XORGMOD
+vboxmouse_drv_17_DEFS = XFree86Server IN_MODULE XFree86Module XFree86LOADER XINPUT XORG_7X IN_XF86_MODULE \
+		DONT_DEFINE_WRAPPERS NO_ANSIC
+vboxmouse_drv_17_INCS := \
+   /usr/include/x11 \
+   /usr/include/xorg \
+   /usr/include/pixman-1
+vboxmouse_drv_17_SOURCES = \
+   vboxmouse.c 
+else
 #
 # vboxmouse_drv_70
 #
@@ -391,5 +387,7 @@ endif # neq ($(KBUILD_TARGET),linux)
 # endif # ! VBOX_ONLY_ADDITIONS
 endif # VBOX_WITH_TESTCASES
 
+endif # neq ($(KBUILD_TARGET),linux)
+
 include $(FILE_KBUILD_SUB_FOOTER)
 
--- VirtualBox-4.2.0_RC3/src/VBox/Additions/x11/vboxvideo/Makefile.kmk.xorg17	2012-05-30 11:39:29.000000000 +0100
+++ VirtualBox-4.2.0_RC3/src/VBox/Additions/x11/vboxvideo/Makefile.kmk	2012-09-07 03:24:32.187238932 +0100
@@ -35,45 +35,35 @@ vboxvideo_drv_DEFS.x86 = __i386__
 # This one has to be defined when building server code on systems where
 # unsigned long is 64bits
 vboxvideo_drv_DEFS.amd64 += _XSERVER64
-vboxvideo_drv_DEFS = \
-	_POSIX_C_SOURCE=199309L _POSIX_SOURCE _XOPEN_SOURCE \
-	_BSD_SOURCE _SVID_SOURCE _GNU_SOURCE SHAPE XINPUT XKB LBX XAPPGROUP \
-	XCSECURITY TOGCUP XF86BIGFONT DPMSExtension PIXPRIV PANORAMIX RENDER \
-	GCCUSESGAS AVOID_GLYPHBLT PIXPRIV SINGLEDEPTH XFreeXDGA XvExtension \
-	XFree86LOADER XFree86Server XF86VIDMODE XvMCExtension SMART_SCHEDULE \
-	BUILDDEBUG X_BYTE_ORDER=X_LITTLE_ENDIAN DNDEBUG FUNCPROTO=15 NARROWPROTO \
-	IN_MODULE XFree86Module IN_XF86_MODULE IN_RT_STATIC
-vboxvideo_drv_DEFS += memset=xf86memset memcpy=xf86memcpy
+vboxvideo_drv_DEFS := XFree86Server IN_MODULE XFree86Module XFree86LOADER IN_XF86_MODULE XORG_7X RENDER=1 \
+   IN_RT_STATIC VBOXVIDEO_13 NO_ANSIC PCIACCESS VBOX_NO_LOW_COLOUR VBOX_DRI
 vboxvideo_drv_INCS = \
-	$(VBOX_PATH_X11_XFREE_4_3)/include \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/X11 \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/X11/extensions \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/extensions \
-	$(VBOX_PATH_X11_XFREE_4_3)/include/fonts \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/afb \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/include \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/fb \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86 \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/common \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/ddc \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/int10 \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/i2c \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/os-support \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/vbe \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/os-support/bus \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/rac \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/ramdac \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/shadowfb \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/vgahw \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/xf1bpp \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/xf24_32bpp \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/xf4bpp \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/mfb \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/mi \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/miext/shadow \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/render \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/randr \
-	$(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/Xext
+   /usr/include/drm \
+   /usr/include/X11/dri \
+   /usr/include/pixman-1 \
+   /usr/share/xorg-x11-server-source \
+   /usr/share/xorg-x11-server-source/fb \
+   /usr/share/xorg-x11-server-source/hw/xfree86/common \
+   /usr/share/xorg-x11-server-source/hw/xfree86/ddc \
+   /usr/share/xorg-x11-server-source/hw/xfree86/dixmods/extmod \
+   /usr/share/xorg-x11-server-source/hw/xfree86/dri \
+   /usr/share/xorg-x11-server-source/hw/xfree86/i2c \
+   /usr/share/xorg-x11-server-source/hw/xfree86/int10 \
+   /usr/share/xorg-x11-server-source/hw/xfree86/modes \
+   /usr/share/xorg-x11-server-source/hw/xfree86/os-support \
+   /usr/share/xorg-x11-server-source/hw/xfree86/os-support/bus \
+   /usr/share/xorg-x11-server-source/hw/xfree86/ramdac \
+   /usr/share/xorg-x11-server-source/hw/xfree86/shadowfb \
+   /usr/share/xorg-x11-server-source/hw/xfree86/vbe \
+   /usr/share/xorg-x11-server-source/hw/xfree86/vgahw \
+   /usr/share/xorg-x11-server-source/hw/xquartz/xpr \
+   /usr/share/xorg-x11-server-source/include \
+   /usr/share/xorg-x11-server-source/mi \
+   /usr/share/xorg-x11-server-source/miext/damage \
+   /usr/share/xorg-x11-server-source/randr \
+   /usr/share/xorg-x11-server-source/Xext \
+   /usr/share/xorg-x11-server-source/render \
+   /usr/share/xorg-x11-server-source/hw/xfree86/parser
 vboxvideo_drv_INCS += $(PATH_ROOT)/src/VBox/Runtime/include
 vboxvideo_drv_SOURCES = \
 	pointer.c \
@@ -86,7 +76,7 @@ vboxvideo_drv_SOURCES = \
 	$(PATH_ROOT)/src/VBox/Additions/common/VBoxVideo/VBVABase.cpp \
 	$(PATH_ROOT)/src/VBox/GuestHost/HGSMI/HGSMICommon.cpp \
 	$(PATH_ROOT)/src/VBox/Runtime/common/alloc/heapsimple.cpp \
-	$(PATH_ROOT)/src/VBox/Runtime/common/alloc/heapoffset.cpp
+	$(PATH_ROOT)/src/VBox/Runtime/common/alloc/heapoffset.cpp edid.c vboxvideo_dri.c
  # Any global symbols in the driver object files will be added to XFree86's
  # symbol table, which can cause problems if we e.g. define a symbol in two
  # modules.
@@ -94,6 +84,44 @@ vboxvideo_drv_SOURCES = \
 	objcopy --keep-global-symbol vboxvideoModuleData $(out) $(out)-objcopy$$(NLTAB) \
 	$(MV) -f $(out)-objcopy $(out)
 
+DLLS += vboxvideo_drv_17
+vboxvideo_drv_17_TEMPLATE = VBOXGUESTR3XORGMOD
+vboxvideo_drv_17_CFLAGS += -Wno-conversion -Wno-unused-parameter $(VBOX_GCC_Wno-variadic-macros) # template?
+vboxvideo_drv_17_DEFS := XFree86Server IN_MODULE XFree86Module XFree86LOADER XORG_7X RENDER=1 \
+	IN_XF86_MODULE IN_RT_STATIC VBOXVIDEO_13 NO_ANSIC PCIACCESS VBOX_NO_LOW_COLOUR VBOX_DRI
+vboxvideo_drv_17_INCS = \
+	/usr/include/drm \
+	/usr/include/X11/dri \
+	/usr/include/pixman-1 \
+	/usr/share/xorg-x11-server-source \
+	/usr/share/xorg-x11-server-source/fb \
+	/usr/share/xorg-x11-server-source/hw/xfree86/common \
+	/usr/share/xorg-x11-server-source/hw/xfree86/ddc \
+	/usr/share/xorg-x11-server-source/hw/xfree86/dixmods/extmod \
+	/usr/share/xorg-x11-server-source/hw/xfree86/dri \
+	/usr/share/xorg-x11-server-source/hw/xfree86/i2c \
+	/usr/share/xorg-x11-server-source/hw/xfree86/int10 \
+	/usr/share/xorg-x11-server-source/hw/xfree86/modes \
+	/usr/share/xorg-x11-server-source/hw/xfree86/os-support \
+	/usr/share/xorg-x11-server-source/hw/xfree86/os-support/bus \
+	/usr/share/xorg-x11-server-source/hw/xfree86/ramdac \
+	/usr/share/xorg-x11-server-source/hw/xfree86/shadowfb \
+	/usr/share/xorg-x11-server-source/hw/xfree86/vbe \
+	/usr/share/xorg-x11-server-source/hw/xfree86/vgahw \
+	/usr/share/xorg-x11-server-source/hw/xquartz/xpr \
+	/usr/share/xorg-x11-server-source/include \
+	/usr/share/xorg-x11-server-source/mi \
+	/usr/share/xorg-x11-server-source/miext/damage \
+	/usr/share/xorg-x11-server-source/randr \
+	/usr/share/xorg-x11-server-source/Xext \
+	/usr/share/xorg-x11-server-source/render \
+	/usr/share/xorg-x11-server-source/hw/xfree86/parser
+vboxvideo_drv_17_INCS += $(PATH_ROOT)/src/VBox/Runtime/include
+vboxvideo_drv_17_SOURCES = $(vboxvideo_drv_SOURCES)
+
+ifdef NOT_FEDORA
+
+
 #
 # vboxvideo_drv_70
 #
@@ -505,4 +533,6 @@ $$(vboxvideo_drv_112_0_OUTDIR)/tstvboxvi
 # endif # ! VBOX_ONLY_ADDITIONS
 endif # VBOX_WITH_TESTCASES
 
+endif # NOT_FEDORA
+
 include $(FILE_KBUILD_SUB_FOOTER)
--- ./src/VBox/Additions/common/VBoxGuestLib/Makefile.kmk.xorg17	2012-08-03 13:28:42.000000000 +0100
+++ ./src/VBox/Additions/common/VBoxGuestLib/Makefile.kmk	2012-09-09 01:05:45.271905105 +0100
@@ -187,11 +187,9 @@ VBoxGuestR3LibXFree86_SOURCES  = \
 	VBoxGuestR3LibVideo.cpp \
 	VBoxGuestR3LibRuntimeXF86.cpp
 VBoxGuestR3LibXFree86_INCS     = \
-        $(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/common/ \
-        $(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/hw/xfree86/os-support \
-        $(VBOX_PATH_X11_XFREE_4_3)/programs/Xserver/include \
-        $(VBOX_PATH_X11_XFREE_4_3)/include \
-        $(VBOX_PATH_X11_XFREE_4_3)/exports/include/X11
+        /usr/share/xorg-x11-server-source/hw/xfree86/common/ \
+		/usr/share/xorg-x11-server-source/hw/xfree86/os-support \
+		/usr/share/xorg-x11-server-source/include 
 
 VBoxGuestR3LibRuntimeXF86.cpp_CXXFLAGS = -Wno-shadow
 
# inspired from http://opensource.apple.com/source/X11server/X11server-85/kdrive/xorg-server-1.6.0/hw/xfree86/dummylib/
#xalloc.c and verrorf.c
--- ./src/VBox/Additions/common/VBoxGuestLib/VBoxGuestR3LibRuntimeXF86.cpp.xorg17	2011-01-14 20:15:34.000000000 +0000
+++ ./src/VBox/Additions/common/VBoxGuestLib/VBoxGuestR3LibRuntimeXF86.cpp	2012-09-09 01:04:03.198818717 +0100
@@ -34,20 +34,55 @@
 #include <iprt/log.h>
 #include <iprt/mem.h>
 #include <iprt/string.h>
+#include <string.h>
+#include <fcntl.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <math.h>
+#include <ctype.h>
 extern "C" {
 # define XFree86LOADER
-# include <xf86_ansic.h>
 # include <errno.h>
 # undef size_t
 }
 
+/** Provide an VErrorF function when used stand-alone. */
+void VErrorF(const char *format, va_list args)
+{
+    vfprintf(stderr, format, args); /* RATS: We assume the format string
+                                     * is trusted, since it is always
+                                     * from a log message in our code. */
+}
+
+/* When using this file as part of a stand-alone (i.e., non-X-Server
+ * program, then the ultimate output routines have to be defined.  */
+
+/** Provide an ErrorF function when used stand-alone. */
+void ErrorF(const char *format, ...)
+{
+    va_list args;
+
+    va_start(args, format);
+    vfprintf(stderr, format, args); /* RATS: We assume the format string
+                                     * is trusted, since it is always
+                                     * from a log message in our code. */
+    va_end(args);
+}
+
+void *xalloc(unsigned long n)
+{
+    if (!n)
+    n = 1;
+    return malloc(n);
+}
+
 /* This is risky as it restricts call to the ANSI format type specifiers. */
 RTDECL(size_t) RTStrPrintf(char *pszBuffer, size_t cchBuffer, const char *pszFormat, ...)
 {
     va_list args;
     int cbRet;
     va_start(args, pszFormat);
-    cbRet = xf86vsnprintf(pszBuffer, cchBuffer, pszFormat, args);
+    cbRet = vsnprintf(pszBuffer, cchBuffer, pszFormat, args);
     va_end(args);
     return cbRet >= 0 ? cbRet : 0;
 }
@@ -55,8 +90,8 @@ RTDECL(size_t) RTStrPrintf(char *pszBuff
 RTDECL(int) RTStrToUInt32Ex(const char *pszValue, char **ppszNext, unsigned uBase, uint32_t *pu32)
 {
     char *pszNext = NULL;
-    xf86errno = 0;
-    unsigned long ul = xf86strtoul(pszValue, &pszNext, uBase);
+    errno = 0;
+    unsigned long ul = strtoul(pszValue, &pszNext, uBase);
     if (ppszNext)
         *ppszNext = pszNext;
     if (RT_UNLIKELY(pszValue == pszNext))
@@ -65,11 +100,11 @@ RTDECL(int) RTStrToUInt32Ex(const char *
         ul = UINT32_MAX;
     if (pu32)
         *pu32 = (uint32_t) ul;
-    if (RT_UNLIKELY(xf86errno == EINVAL))
+    if (RT_UNLIKELY(errno == EINVAL))
         return VERR_INVALID_PARAMETER;
-    if (RT_UNLIKELY(xf86errno == ERANGE))
+    if (RT_UNLIKELY(errno == ERANGE))
         return VWRN_NUMBER_TOO_BIG;
-    if (RT_UNLIKELY(xf86errno))
+    if (RT_UNLIKELY(errno))
         /* RTErrConvertFromErrno() is not available */
         return VERR_UNRESOLVED_ERROR;
     if (RT_UNLIKELY(*pszValue == '-'))
@@ -77,7 +112,7 @@ RTDECL(int) RTStrToUInt32Ex(const char *
     if (RT_UNLIKELY(*pszNext))
     {
         while (*pszNext)
-            if (!xf86isspace(*pszNext))
+            if (!isspace(*pszNext))
                 return VWRN_TRAILING_CHARS;
         return VWRN_TRAILING_SPACES;
     }
@@ -135,6 +170,6 @@ RTDECL(void *)  RTMemTmpAllocTag(size_t
 
 RTDECL(void)    RTMemTmpFree(void *pv)
 {
-    xfree(pv);
+    free(pv);
 }
 
